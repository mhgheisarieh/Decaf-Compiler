import java_cup.runtime.*;

parser code {:
    private Scanner scanner;

    // Defining constructor to have an access in Syntax class
     public parser(Scanner scanner){
        this.scanner = scanner;
     }

:}

scan with {: return scanner.next_token(); :}

/*reserved*/
// Types
terminal VOID, INT, DOUBLE, BOOL, STRING;
// Boolean
terminal BOOLCONST;
// Other reserved
terminal CLASS, INTERFACE, NULL, THIS, EXTENDS, IMPLEMENTS, FOR, WHILE, IF, ELSE, RETURN, BREAK, CONTINUE, NEW, NEWARRAY, PRINT, READINT, READLN, DTOI, ITOD, BTOI, ITOB, PRIVATE, PROTECTED, PUBLIC;

/* identifiers */
terminal IDENTIFIER;

/* literals */
terminal INTCONST, DOUBLECONST;

/* operators */
terminal ASSIGN, EQ, ADD;

/* punctuations */
terminal MINUS, PROD, DIV, MOD, LESS, LESSEQ, GR, GREQ, NOTEQ, NOT, LOGICAND, LOGICOR, SEMICOLON, COMMA, DOT, LBRACK, RBRACK, LPAREN, RPAREN;

nonterminal stmt, expr;
nonterminal Integer term, factor;

precedence left ADD, MINUS;
precedence left PROD, DIV;

// grammar  //TODO add all grammars
stmt ::= expr SEMICOLON;

expr ::=    expr ADD expr
        |   expr MINUS expr
        |   expr PROD expr
        |   expr DIV expr
        |   INTCONST;